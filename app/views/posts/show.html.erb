<p id="notice"><%= notice %></p>

<p>
  <strong>Title:</strong>
  <%= @post.title %>
</p>

<p>
  <strong>Content:</strong>
  <%= @post.content %>
</p>

<%= link_to 'Edit', edit_post_path(@post), class: "btn btn-warning" %> |
<%= link_to 'Back', posts_path, class: "btn btn-success" %>

<!-- like 버튼 -->
<% if @like %>
  <%= button_tag "Like", class: "btn btn-info", id: "like_button" %>
<%else%>
  <%= button_tag "Dislike", class: "btn btn-danger", id: "like_button" %>
<%end%>
(<span id='like_count'><%=@post.likes.count%></span>)

<h3><span id="word_count">0</span>/<%= Comment.MAX_LENGTH%></h3>

<%= form_tag create_comment_to_post_path, id: "comment" do %>
  <%= text_field_tag "comment[body]"%>
  <%= submit_tag "댓글달기"%>
<%end%>


<table class="table" id="comment_table">
  <thead>
    <tr>
      <th>댓글</th>  
    <tr>
  </thead>
  <tbody>
    <% @post.comments.reverse.each do |c|%>
      <tr id="comment-<%= c.id %>">
        <td><%= c.body%><td>
        <td><%= link_to "삭제", destroy_comment_to_posts_path(c.id), method: :delete, data:{confirm:"정말 삭제하시겠습니까?"}, class: "btn btn-warning", remote: true%><td>
      </tr>
    <%end%>
  </tbody>
</table>

<script>
  $(function(){
    $('#like_button').on('click', function(e){
      e.preventDefault();
      //console.log("Like button Clicked");
      $.ajax({
        method: "POST",
        url: "<%= like_to_post_path%>"
      });
    });
    
    var form = $('#comment');
    
    form.on('click', function() {
      /*alert("댓글 등록해");*/
    })
    
    $(document).on('submit','#comment', function(e){
      e.preventDefault();
      console.log("댓 등록 완료될 예정");
      var contents = form.serialize(); //# form에 들어있는 모든 input tag를 가져오는 것.
      // var contents = $('#comment_body').val();
      alert(contents.comment+" 라고 등록할꺼?");
      $.ajax({
        url: "<%= create_comment_to_post_path%>",
        method: "POST",
        data: contents
      })
    })
    
    var max_text_length = <%=Comment.MAX_LENGTH %>;
    $('#comment').on('keyup',function(){
      var text_length = $('#comment_body').val().length;
      $('#word_count').text(text_length);
      $('#word_count').addClass('text-success').removeClass('text-danger');
      if(text_length > max_text_length){
        alert("최대 길이 넘음");
        $('#word_count').addClass('text-danger').removeClass('text-success');
        // max_length를 넘은 글은 삭제된다
        $('#comment_body').val($('#comment_body').val().substr(0, max_text_length));
        text_length = $('#comment_body').val().length;
        $('#word_count').text(text_length);
      }
    })
    
    // var delete_form = $('#comments');
    // var id = $(this).attr('id');
    // delete_form.on('submit',function(e){
    //   e.preventDefault();
    //   $.ajax({
    //     url: "<--%= destroy_comment_to_posts_path%>",
    //     method: "DELETE",
    //     data: {body: $('#comment_content')},
    //     success:function(result){
    //       if(result=="OK"){
    //         $('#comment_content').remove();
    //         alert("삭제되었습니다.");
    //       }else{
    //         alert("삭제 ㄴㄴ");
    //       }
    //     }
    //   })
    // })
  })
</script>